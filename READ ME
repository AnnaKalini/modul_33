
Итоговый проект по автоматизации тестирования (PJ-04) Тест-кейсы размещены в файле по адресу: https://docs.google.com/spreadsheets/d/10bbitVBLygfZY_IZBEfFUNja04FkG8TQiYb2gORbns0/edit?usp=sharing


Папка tests:
test_negative_auth_page - тестируем негативные сценарии страницы авторизации
test_negative_reg_page - тестируем негативные сценарии страницы регистрации test_negative_new_pass_page - тестируем негативные сценарии страницы восстановления пароля
test_positive_auth_page - тестируем позитивные сценарии страницы авторизации
test_positive_reg_page - тестируем позитивные сценарии страницы регистрации
test_positive_new_pass_page - тестируем позитивные сценарии страницы восстановления пароля

Папка pages:
reg_mail - GET-запросы к виртуальному почтовому ящику  для получения валидного e-mail и кода для регистрации на сайте/восстановления пароля.
locators - локаторы XPath и CSS на web-элементы сайта
auth - функции-обёртки для локаторов, распределённые по классам в зависимости от тематики тестов
base - функции для применения к локаторам явных ожиданий, получения главной страницы сайта и пути текущей страницы
config - исходные статические данные
settings - учетные данные, используемые в процессе теста

Инструменты, которые применялись для тестирования:

Selenium WebDriver: это инструмент для автоматизации тестирования веб-приложений. Применялся для тестирования функциональности веб-сайта, такой как регистрация, авторизация и восстановление пароля. 
Selenium WebDriver был выбран из-за его широкой поддержки различных языков программирования и браузеров, а также наличия большого количества документации и примеров кода.
С помощью Selenium WebDriver проверялась корректность работы веб-элементов и их взаимодействия с пользователем. 
Например, проверялось, что при вводе корректных данных пользователь успешно регистрируется на сайте, а при вводе некорректных данных отображается соответствующее сообщение об ошибке.
PyTest: это инструмент для написания и запуска тестов в Python. Применялся для организации и запуска тестов, а также для проверки результатов тестирования.
PyTest был выбран из-за его простоты использования, поддержки параметризации тестов и возможности создания фикстур для повторного использования кода.
С помощью PyTest проверялись результаты выполнения тестов и их соответствие ожидаемым результатам. 
Например, проверялось, что после успешной регистрации пользователь перенаправляется на страницу профиля, а после неуспешной регистрации отображается соответствующее сообщение об ошибке.
В целом, применяемые инструменты позволяют автоматизировать тестирование функциональности веб-сайта, проверять корректность работы веб-элементов и их взаимодействия с пользователем.
